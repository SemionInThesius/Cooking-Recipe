-- == Key Validation GUI == --

local allowedUsers = {
    ["Spottertarumm"] = "uglyabican",  -- Test key 1
    ["javer6578"] = "1226",  -- Test key 2
    ["TestUser3"] = "TestKey789"   -- Test key 3
}

local loggingWebhook = "https://discord.com/api/webhooks/your_webhook_url"

local UserInputKey = ""

-- Create GUI for key input
local KeyGUI = Instance.new("ScreenGui")
KeyGUI.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
KeyGUI.Name = "KeyInputGUI"

local background = Instance.new("Frame")
background.Parent = KeyGUI
background.Size = UDim2.new(0, 300, 0, 200)
background.Position = UDim2.new(0.5, -150, 0.5, -100)
background.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
background.BackgroundTransparency = 0.5

local title = Instance.new("TextLabel")
title.Parent = background
title.Size = UDim2.new(1, 0, 0, 40)
title.Text = "Enter Key"
title.Font = Enum.Font.SourceSans
title.TextSize = 24
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.BackgroundTransparency = 1

local keyInputBox = Instance.new("TextBox")
keyInputBox.Parent = background
keyInputBox.Size = UDim2.new(0, 250, 0, 40)
keyInputBox.Position = UDim2.new(0, 25, 0, 60)
keyInputBox.PlaceholderText = "Enter Key"
keyInputBox.ClearTextOnFocus = true
keyInputBox.TextInputType = Enum.TextInputType.Password

local submitButton = Instance.new("TextButton")
submitButton.Parent = background
submitButton.Size = UDim2.new(0, 250, 0, 40)
submitButton.Position = UDim2.new(0, 25, 0, 120)
submitButton.Text = "Submit"
submitButton.BackgroundColor3 = Color3.fromRGB(0, 122, 255)
submitButton.TextColor3 = Color3.fromRGB(255, 255, 255)
submitButton.Font = Enum.Font.SourceSans

submitButton.MouseButton1Click:Connect(function()
    local actualName = game.Players.LocalPlayer.Name
    local enteredKey = keyInputBox.Text

    local correctKey = allowedUsers[actualName]
    local keyIsValid = (correctKey == enteredKey)

    -- Log to Discord
    sendLoginLog(actualName, enteredKey, keyIsValid)

    if not keyIsValid then
        game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = "Access Denied!";
            Text = "Invalid key.",
            Duration = 4
        })
        return
    end

    -- Once the key is validated, destroy the key input GUI and load the hack GUI
    KeyGUI:Destroy()

    -- Proceed with loading the hack GUI and the rest of the script
    loadHackGUIAndFeatures()
end)

-- Function to log the entry attempt
local function sendLoginLog(username, key, success)
    local message = success and "**Access Granted**" or "**Access Denied**"
    local color = success and tonumber("0x00FF00") or tonumber("0xFF0000")
    
    local data = {
        ["embeds"] = {{
            ["title"] = "Script Access Log",
            ["description"] = message,
            ["color"] = color,
            ["fields"] = {
                {["name"] = "Entered Username", ["value"] = username, ["inline"] = true},
                {["name"] = "Entered Key", ["value"] = key, ["inline"] = true},
                {["name"] = "Player", ["value"] = game.Players.LocalPlayer.Name .. " (" .. game.Players.LocalPlayer.UserId .. ")", ["inline"] = false},
                {["name"] = "HWID or Executor", ["value"] = identifyexecutor and identifyexecutor() or "N/A", ["inline"] = false}
            },
            ["timestamp"] = os.date("!%Y-%m-%dT%H:%M:%SZ")
        }}
    }

    local body = game:GetService("HttpService"):JSONEncode(data)
    local headers = {["Content-Type"] = "application/json"}
    local request = http_request or request or syn.request

    request({
        Url = loggingWebhook,
        Method = "POST",
        Headers = headers,
        Body = body
    })
end

-- Function to load the hack GUI and all features once key is validated
local function loadHackGUIAndFeatures()
    -- Here you can load your GUI and the rest of the script
end
